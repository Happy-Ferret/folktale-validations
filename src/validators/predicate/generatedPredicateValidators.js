import {
  isNotArray,
  isArray,
  isBoolean,
  isNotBoolean,
  isNotDate,
  isEmptyArray,
  isNonEmptyArray,
  isNonEmptyString,
  isEmptyString,
  isDate,
  isFunction,
  isString,
  isNotString,
  isNotFunction,
  isNotNaN,
  isNaN,
  isNotNil,
  isNotEmpty,
  isNull,
  isNotNull,
  isNotNumber,
  isNumber,
  isPlainObj,
  isNotPlainObj,
  isUndefined,
  isNotUndefined,
  isValidDate,
  isNotValidDate,
  isNotValidNumber,
  isValidNumber,
} from 'ramda-adjunct'
import { assoc, isNil, isEmpty } from 'ramda'
import predicateValidator from '../../helpers/predicateValidator'
import { reduceObjIndexed } from '../../utils/iteration'
import { toTitle } from '../../utils/formatting'

const predicates = {
  isArray,
  isNotArray,
  isBoolean,
  isNotBoolean,
  isDate,
  isNotDate,
  isString,
  isNotString,
  isEmpty,
  isNotEmpty,
  isEmptyArray,
  isNonEmptyArray,
  isEmptyString,
  isNonEmptyString,
  isFunction,
  isNotFunction,
  isNaN,
  isNotNaN,
  isNil,
  isNotNil,
  isNull,
  isNotNull,
  isUndefined,
  isNotUndefined,
  isPlainObj,
  isNotPlainObj,
  isNumber,
  isNotNumber,
  isValidDate,
  isNotValidDate,
  isValidNumber,
  isNotValidNumber,
}

const buildValidator = (acc, [key, predicate]) =>
  assoc(
    `validate${toTitle(key)}`,
    message => predicateValidator(message, predicate),
    acc
  )

const validators = reduceObjIndexed(buildValidator, {}, predicates)

export const {
  validateIsArray,
  validateIsNotArray,
  validateIsPlainObj: validateIsObject,
  validateIsNotPlainObj: validateIsNotObject,
  validateIsBoolean,
  validateIsNotBoolean,
  validateIsString,
  validateIsNotString,
  validateIsFunction,
  validateIsNotFunction,
  validateIsNumber,
  validateIsNotNumber,
  validateIsDate,
  validateIsNotDate,
  validateIsNaN,
  validateIsNotNaN,
  validateIsNil,
  validateIsNull,
  validateIsNotNull,
  validateIsUndefined,
  validateIsNotUndefined,
  validateIsEmpty,
  validateIsNotEmpty,
  validateIsEmptyArray,
  validateIsNonEmptyArray,
  validateIsEmptyString,
  validateIsNonEmptyString,
  validateIsValidNumber,
  validateIsNotValidNumber,
  validateIsValidDate,
  validateIsNotValidDate,
} = validators
